name: Docstring Compliance Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  docstring-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install DocOctopy
      run: |
        python -m pip install --upgrade pip
        pip install dococtopy
    
    - name: Run docstring compliance check
      run: |
        dococtopy scan . --format json --output-file docstring-report.json --fail-level error
    
    - name: Upload docstring report
      uses: actions/upload-artifact@v4
      with:
        name: docstring-report-py${{ matrix.python-version }}
        path: docstring-report.json
        retention-days: 30

  docstring-fix-suggestions:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install DocOctopy with LLM support
      run: |
        python -m pip install --upgrade pip
        pip install "dococtopy[llm]"
    
    - name: Generate fix suggestions (dry-run)
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        if [ -n "$OPENAI_API_KEY" ]; then
          dococtopy fix . --dry-run --rule DG101,DG202,DG203 --max-changes 10
        else
          echo "No OpenAI API key provided, skipping fix suggestions"
        fi
